{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/OMAR Mohamed Elnakary Booking Sys MUST/Booking-App-main/src/pages/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    handleSubmit = e => {\n      e.preventDefault();\n      console.log(e.target.email.value);\n      if (!e.target.email.value) {\n        alert(\"Email is required\");\n      } else if (!e.target.email.value) {\n        alert(\"Valid email is required\");\n      } else if (!e.target.password.value) {\n        alert(\"Password is required\");\n      } else if (e.target.email.value === \"Nader@Nader\" && e.target.password.value === \"123456\") {\n        alert(\"Successfully logged in\");\n        e.target.email.value = \"\";\n        e.target.password.value = \"\";\n      } else {\n        alert(\"Wrong email or password combination\");\n      }\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: \"true\",\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Form","Button","Login","email","setEmail","password","setPassword","validateForm","length","handleSubmit","event","preventDefault","e","console","log","target","value","alert"],"sources":["/Users/macbookpro/Desktop/OMAR Mohamed Elnakary Booking Sys MUST/Booking-App-main/src/pages/Login/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    handleSubmit = e => {\n      e.preventDefault();\n      console.log(e.target.email.value);\n  \n      if (!e.target.email.value) {\n        alert(\"Email is required\");\n      } else if (!e.target.email.value) {\n        alert(\"Valid email is required\");\n      } else if (!e.target.password.value) {\n        alert(\"Password is required\");\n      } else if (\n        e.target.email.value === \"Nader@Nader\" &&\n        e.target.password.value === \"123456\"\n      ) {\n        alert(\"Successfully logged in\");\n        e.target.email.value = \"\";\n        e.target.password.value = \"\";\n      } else {\n        alert(\"Wrong email or password combination\");\n      }\n    };\n  }\n  \n  \n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button block=\"true\" size=\"lg\" type=\"submit\"  disabled={!validateForm()}>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,aAAa;AAAC;AAErB,eAAe,SAASC,KAAK,GAAG;EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,SAASQ,YAAY,GAAG;IACtB,OAAOJ,KAAK,CAACK,MAAM,GAAG,CAAC,IAAIH,QAAQ,CAACG,MAAM,GAAG,CAAC;EAChD;EAEA,SAASC,YAAY,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,EAAE;IACtBF,YAAY,GAAGG,CAAC,IAAI;MAClBA,CAAC,CAACD,cAAc,EAAE;MAClBE,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACZ,KAAK,CAACa,KAAK,CAAC;MAEjC,IAAI,CAACJ,CAAC,CAACG,MAAM,CAACZ,KAAK,CAACa,KAAK,EAAE;QACzBC,KAAK,CAAC,mBAAmB,CAAC;MAC5B,CAAC,MAAM,IAAI,CAACL,CAAC,CAACG,MAAM,CAACZ,KAAK,CAACa,KAAK,EAAE;QAChCC,KAAK,CAAC,yBAAyB,CAAC;MAClC,CAAC,MAAM,IAAI,CAACL,CAAC,CAACG,MAAM,CAACV,QAAQ,CAACW,KAAK,EAAE;QACnCC,KAAK,CAAC,sBAAsB,CAAC;MAC/B,CAAC,MAAM,IACLL,CAAC,CAACG,MAAM,CAACZ,KAAK,CAACa,KAAK,KAAK,aAAa,IACtCJ,CAAC,CAACG,MAAM,CAACV,QAAQ,CAACW,KAAK,KAAK,QAAQ,EACpC;QACAC,KAAK,CAAC,wBAAwB,CAAC;QAC/BL,CAAC,CAACG,MAAM,CAACZ,KAAK,CAACa,KAAK,GAAG,EAAE;QACzBJ,CAAC,CAACG,MAAM,CAACV,QAAQ,CAACW,KAAK,GAAG,EAAE;MAC9B,CAAC,MAAM;QACLC,KAAK,CAAC,qCAAqC,CAAC;MAC9C;IACF,CAAC;EACH;EAIA,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,uBACpB,QAAC,IAAI;MAAC,QAAQ,EAAER,YAAa;MAAA,wBAC3B,QAAC,IAAI,CAAC,KAAK;QAAC,IAAI,EAAC,IAAI;QAAC,SAAS,EAAC,OAAO;QAAA,wBACrC,QAAC,IAAI,CAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eAC9B,QAAC,IAAI,CAAC,OAAO;UACX,SAAS;UACT,IAAI,EAAC,OAAO;UACZ,KAAK,EAAEN,KAAM;UACb,QAAQ,EAAGS,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACG,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC1C;MAAA;QAAA;QAAA;QAAA;MAAA,QACS,eACb,QAAC,IAAI,CAAC,KAAK;QAAC,IAAI,EAAC,IAAI;QAAC,SAAS,EAAC,UAAU;QAAA,wBACxC,QAAC,IAAI,CAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACjC,QAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,UAAU;UACf,KAAK,EAAEX,QAAS;UAChB,QAAQ,EAAGO,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACG,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC7C;MAAA;QAAA;QAAA;QAAA;MAAA,QACS,eACb,QAAC,MAAM;QAAC,KAAK,EAAC,MAAM;QAAC,IAAI,EAAC,IAAI;QAAC,IAAI,EAAC,QAAQ;QAAE,QAAQ,EAAE,CAACT,YAAY,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE/D;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GA7DuBL,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}